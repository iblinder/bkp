#!/usr/bin/env perl6
use YAMLish;
use Bkp;

sub log ( Str:D $message ) {
    return unless %*ENV<BKP_LOG>;
    my $time = DateTime.now.truncated-to('second');
    note "$time bkp: [$*PID] $message";
}

sub load-profile ( FilePath $filename ) {
    my %profile = load-yaml $filename.IO.slurp;
    my $prefix = $filename ~~ rx{:i (<-[ / ]>+) \. ya?ml $}
      ?? ~$0 !! $filename.IO.basename.lc;
    %profile<dst><prefix> //= $prefix;
    return %profile;
}

sub load-class ( Str:D $namespace, Str:D $class ) {
    my $package = "Bkp::{$namespace.lc.tc}::{$class.lc.tc}";
    require ::($package);
    return ::($package);
}

sub add-middleware ( $src, $namespace, %profile ) {
    return $src if !%profile{$namespace};
    return load-class( $namespace, %profile{$namespace}<class>:delete )
         . new( |%profile, src => $src );
}

sub get-dst (%profile) {
    my $src = load-class( 'src', %profile<src><class>:delete )
            . new( |%profile<src> );
    $src = add-middleware $src, 'compress', %profile;
    $src = add-middleware $src, 'crypt', %profile;
    $src = add-middleware $src, 'shape', %profile;
    my $dst = load-class( 'dst', %profile<dst><class> )
            . new( |%profile<dst>, src => $src );
    return $dst;
}

multi MAIN (*@filenames) {
    return unless @filenames.elems;
    log "Got profile: $_" for @filenames;
    for @filenames -> FilePath $filename {
        log $filename.IO.basename ~ ' started';
        my %profile = load-profile $filename;
        my $dst     = get-dst %profile;
        $dst.SEND;
        log $filename.IO.basename ~ ' finished';
    }
}

multi MAIN ( 'list', FilePath $filename ) {
    my %profile = load-profile $filename;
    my $dst     = get-dst %profile;
    $dst.all-archivesÂ».say;
}

